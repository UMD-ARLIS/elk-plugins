/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package elk.plugins;

import co.elastic.logstash.api.Configuration;
import co.elastic.logstash.api.Context;
import co.elastic.logstash.api.Event;
import co.elastic.logstash.api.FilterMatchListener;
import elk.plugins.filter.KeycloakFilter;

import org.logstash.plugins.ContextImpl;
import org.logstash.plugins.ConfigurationImpl;

import java.util.*;
import java.util.concurrent.atomic.AtomicInteger;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class KeycloakFilterTest {
    @Test void testKeycloakFilter() {
        Map<String, Object> configSettings = new HashMap<String, Object>()
        {
            {
                put("source", "authorization");
                put("access_token", "x_token_auth");
                put("realm", "userale-keycloak-demo");
                put("server", "http://localhost:8080");
                put("resource", "userale-keycloak-demo");
            }
        };

        Configuration config = new ConfigurationImpl(
            Collections.synchronizedMap(configSettings)
        );

        Context context = new ContextImpl(null, null);
        KeycloakFilter filter = new KeycloakFilter("keycloak_filter", config, context);

        Event e = new org.logstash.Event();
        e.setField("authorization", "abcdef");
        
        TestMatchListener matchListener = new TestMatchListener();
        Collection<Event> results = filter.filter(Collections.singletonList(e), matchListener);

        assertEquals(1, results.size());
        assertEquals("fedcba", e.getField("authorization"));
        assertEquals(1, matchListener.getMatchCount());
    }
}

class TestMatchListener implements FilterMatchListener {

    private AtomicInteger matchCount = new AtomicInteger(0);

    @Override
    public void filterMatched(Event event) {
        matchCount.incrementAndGet();
    }

    public int getMatchCount() {
        return matchCount.get();
    }
}